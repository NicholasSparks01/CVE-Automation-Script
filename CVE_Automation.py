# Extra Resources 
# https://cveawg.mitre.org/api/cve/CVE-2023-1964
# https://nvd.nist.gov/developers/vulnerabilities
# https://csrc.nist.gov/schema/nvd/api/2.0/external/cvss-v3.1.json
# Test JSON Links
# V1: https://services.nvd.nist.gov/rest/json/cves/1.0?resultsPerPage=10&orderBy=lastModifiedDate%20desc
# V2: https://services.nvd.nist.gov/rest/json/cves/2.0/?resultsPerPage=100&cvssV3Severity=HIGH&pubStartDate=2023-04-10T00:00:00.000&pubEndDate=2023-04-11T00:00:00.000
# V3: https://services.nvd.nist.gov/rest/json/cves/1.0/?cvssV3Severity%3E=HIGH&orderBy=publishedDate&pubStartDate=2023-04-10T00:00:00:000%20Z&pubEndDate=2023-04-11T00:00:00:000%20Z
# V4: 
# Retrieve the latest CVEs from the NVD's API

import requests
import json
import datetime
import win32com.client as client
import datetime

# Set up email settings
SMTP_SERVER = 'smtp.outlook.com'
SMTP_PORT = 587
SMTP_USERNAME = 'sparks.nicholas@outlook.com'
SMTP_PASSWORD = 'K3Wc8Z4n#SGEAr'

def date_time():
    # get the current date and time
    now = datetime.datetime.now()
    three_days_ago = now - datetime.timedelta(days=3)

    # store the month, day, year, and time in separate variables
    current_date_time = {
        "year": now.year,
        "month": str(now.month).zfill(2),
        "day": str(now.day).zfill(2),
        "hour": str(now.hour).zfill(2),
        "minute": str(now.minute).zfill(2),
        "second": str(now.second).zfill(2),
        "ThreeDays_Day": str(three_days_ago.day).zfill(2),
        "ThreeDays_Month": str(three_days_ago.month).zfill(2),
        "ThreeDays_Year": str(three_days_ago.year).zfill(2)
    }
    return current_date_time

def Timezone_Converter(cves, cve_date):
    original_time = cve_date[1]
    original_date = cve_date[0]

    # converts the original time to a datetime object
    original_datetime = datetime.datetime.strptime(original_date + original_time, '%Y-%m-%d%H:%MZ')

    est_offset = datetime.timedelta(hours=-4)
    #defines the time difference Between Zulu and EST
    est_datetime = original_datetime + est_offset

    # formats the new date and time as strings
    new_date = est_datetime.strftime('%Y-%m-%d')
    new_time = est_datetime.strftime('%H:%M:%S')

    #create updated list
    cve_date = [new_date, new_time]

    # Removes Z and replaces with EST
    cve_date[1] = cve_date[1][:-3]
    cve_date[1] = cve_date[1][:] + 'EST' 

    # Joins the list
    cve_date = " ".join(cve_date)
    return cve_date   

def send_email(to_address, vulnerabilities):
    # Create Outlook Application object
    outlook = client.Dispatch('Outlook.Application')

    # Create MailItem object
    mail = outlook.CreateItem(0)

    # Set up email properties
    mail.Subject = 'New CVE Vulnerabilities'
    mail.To = to_address

    # Build HTML body with CVE details
    html_body = """
        <html>
        <head>
            <meta charset="utf-8" />
            <meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
        </head>
        <body>
        <style>
        <style>
        #CVE_ID {
            width: 25%;
            text-align: center; }
        #CVE_DATE {
            width:100px; 
            text-align: middle; }
        #CVE_DESC {
            width: 520;
        }
        tr.item {
            border: 2px solid black; } 
        a { 
            text-align: center; 
            padding: 7px;
            display: block; } 
        table { border-collapse: collapse; 
        </style> <table>"""
    html_body += """
        <tr class="title">
        <th id="CVE_ID">CVE ID</th>
        <th id="CVE_DESC">Summary</th>
        <th id="CVE_DATE">Published Date</th></tr>"""
    for cve_id, cve_title, cve_desc, cve_date, cve_modifiedDate, cve_link, cve_numscore, cve_rank in vulnerabilities:
        html_body += f"""
        <tr class="item" outline: thin solid">
            <td id="CVE_ID">
                <a href="{cve_link}"> {cve_id} </a>
                <br>
                <a> {cve_numscore} - {cve_rank} </a> 
            </td>
            <td id="CVE_DESC"> {cve_desc} </td>
            <td id="CVE_DATE"> {cve_date} </td>
        </tr>
        """
    html_body += '</table></body></html>'

    # Attach HTML body to email message
    mail.HTMLBody = html_body

    # Send email
    mail.Send()

current_date_time = date_time()
url= f"https://services.nvd.nist.gov/rest/json/cves/1.0/?totalResults=10&cvssV3Severity=CRITICAL&orderBy=publishedDate&pubStartDate={current_date_time['ThreeDays_Year']}-{current_date_time['ThreeDays_Month']}-{current_date_time['ThreeDays_Day']}T00:00:00:000%20UTC&pubEndDate={current_date_time['year']}-{current_date_time['month']}-{current_date_time['day']}T{current_date_time['hour']}:{current_date_time['minute']}:{current_date_time['second']}:000%20UTC"
response = requests.get(url)
cves = json.loads(response.text)['result']['CVE_Items']

vulnerabilities = []
current_date_time = {}

for cve in cves:
    cve_id = cve['cve']['CVE_data_meta']['ID']
    cve_title = cve['cve']['description']['description_data'][0]['value']
    cve_date = cve['publishedDate'].split("T")
    cve_desc = cve['cve']['description']['description_data'][0]['value']
    cve_modifiedDate = cve['lastModifiedDate']
    cve_link = cve['cve']['references']['reference_data'][0]['url']

    try:
        cve_numscore = cve['impact']['baseMetricV3']['cvssV3']['baseScore']
    except KeyError:
        cve_numscore = 'No Data'
    try:
        cve_rank = cve['impact']['baseMetricV3']['cvssV3']['baseSeverity']
    except KeyError:
        cve_rank = 'No Data'

    # Changes time to EST
    cve_date = Timezone_Converter(cves, cve_date)
    vulnerabilities.append((cve_id, cve_title, cve_desc, cve_date, cve_modifiedDate, cve_link, cve_numscore, cve_rank))
    print(cve_desc)
    # print('CVE ID:', cve_id)
    # print('Title:', cve_title)
    # print('Modified Date:', cve_modifiedDate)
    # print('Release Date:', cve_date)
    # print('Description:', cve_desc)
    # print('Score:', cve_numscore)
    # print('Link', cve_link)
    # print('\n')
print(url)
send_email('sparks.nicholas@outlook.com', vulnerabilities)

# print("Day:", current_date_time["day"])
# print("Day:", current_date_time["threeDays"])
# print("Month:", current_date_time["month"])
# print("Year:", current_date_time["year"])
# print("Hour", current_date_time["hour"])
# print("Minute", current_date_time["minute"])
# print("Second", current_date_time["second"])